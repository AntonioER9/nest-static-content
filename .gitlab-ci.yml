include:
  - project: 'cencosud-ds/cencommerce/utils/pipe-templates'
    ref: 'master'
    file:
      - 'deploy-to-k8s.yml'
      - 'node-linter.yml'

stages:
  - apm
  - check
  - install
  - lint
  - test
  - package
  - sast
  - validate-jira
  - deploy
  - database
  - dast
  - compliance-jira
  - result-security

variables:
  DOCKER_NODE_IMG: 'registry.gitlab.com/cencosud-ds/cencommerce/utils/docker-images/node:16.16-alpine3.16'

newrelic:validator:stg:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      allow_failure: true

install:
  stage: install
  image: $DOCKER_NODE_IMG
  variables:
    CDA_FLAGS_TOKEN: $CDA_FLAGS_TOKEN
  dependencies: []
  script:
    - npm ci --cache .npm --prefer-offline --quiet
  tags:
    - private
    - ccom
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
    policy: pull-push
  artifacts:
    paths:
      - node_modules/
    expire_in: '5 days'

prettier:
  image: $DOCKER_NODE_IMG
  before_script: []
  script:
    - npm run format
  dependencies:
    - install
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
    policy: pull
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      allow_failure: false

tslint:
  image: $DOCKER_NODE_IMG
  before_script: []
  dependencies:
    - install
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
    policy: pull
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      allow_failure: false

unit-testing:
  stage: test
  image: $DOCKER_NODE_IMG
  script:
    - npm run test:ci
  dependencies:
    - install
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
    policy: pull
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - coverage/
    reports:
      junit:
        - junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  tags:
    - private
    - ccom
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

pkg:container:
  variables:
    BUILD_IMAGE_EXTRA_ARGS: '--build-arg APP_PORT=${APP_PORT}'
  dependencies:
    - install
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

container_scanning:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

code_quality:
  rules:
    - if: $CI_COMMIT_BRANCH

validate-jira:branch:
  needs: []
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

staging:
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

production:
    allow_failure: true

staging_dast:
  variables:
    GIT_STRATEGY: none
    HOST: ecomm-stg.cencosud.com
  before_script:
    - export DAST_WEBSITE="https://cda-${CI_PROJECT_NAME}.${HOST}"
    - echo ${DAST_WEBSITE}
  needs:
    - staging
  allow_failure: true
  rules:
    - if: '$DAST_DISABLED'
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: delayed
      start_in: 1 minutes
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: delayed
      start_in: 1 minutes

production_dast:
  variables:
    GIT_STRATEGY: none
    HOST: ecomm.cencosud.com
  before_script:
    - export DAST_WEBSITE="https://cda-${CI_PROJECT_NAME}.${HOST}"
    - echo ${DAST_WEBSITE}
  allow_failure: false
  needs:
    - production
  rules:
    - if: '$DAST_DISABLED'
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: delayed
      start_in: 1 minutes

db:stg:
  needs: 
    - job: staging
    - job: install
  stage: database
  image: $DOCKER_NODE_IMG
  environment: staging
  dependencies:
    - install
  script:
    - npm run db:ci
  allow_failure: true
  tags:
    - spp
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

db:prod:
  needs: 
    - job: production
    - job: install
  stage: database
  image: $DOCKER_NODE_IMG
  environment: production
  dependencies:
    - install
  script:
    - npm run db:ci
  allow_failure: true
  tags:
    - private
    - ccom
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual